00020000 // 0000 jmp start
00000050 // 0001     reti
00110020 // 0002     call DisplayControllerInit
001d0020 // 0003     call ClearScreen
00011c5d // 0004     mov lcd_char, 1
00011d5d // 0005     mov lcd_x, 1 ; x
00011e5d // 0006     mov lcd_y, 1 ; y
00001f5d // 0007     clr inverted_colors
00240020 // 0008     call CharacterOut
00011c82 // 0009     inc lcd_char
00141d82 // 000a     add lcd_x, 20
000c1e82 // 000b     add lcd_y, 12
00401e8b // 000c     cmp lcd_y, 64
00080001 // 000d     jmplt next
00660020 // 000e     call LcdUpdate
005a0020 // 000f     call DisplayOn
0000005f // 0010     hlt
6000005d // 0011     mov lcd_character_ram_address, CHARACTER_RAM_START
8000015d // 0012     mov lcd_display_ram_address, DISPLAY_RAM_START
81ff025d // 0013     mov lcd_display_ram_end, DISPLAY_RAM_END
000004f0 // 0014     in  lcd_font_width, [lcd_character_ram_address]
010005f0 // 0015     in  lcd_font_height, [lcd_character_ram_address+1]
020003f0 // 0016     in  lcd_character_count, [lcd_character_ram_address+2]
ffff075d // 0017     ser lcd_font_mask
0010115d // 0018     mov lcd_temp, 16
04111164 // 0019     sub lcd_temp, lcd_temp, lcd_font_width
11070767 // 001a     shr lcd_font_mask, lcd_font_mask, lcd_temp
0008065d // 001b     mov lcd_line_width, LCD_LINE_WIDTH
00000040 // 001c     ret
0001155e // 001d     mov lcd_p_ram, lcd_display_ram_address
0000115d // 001e     clr lcd_temp
001511f4 // 001f     out [lcd_p_ram], lcd_temp
00011582 // 0020     inc lcd_p_ram
0215006b // 0021     cmp lcd_p_ram, lcd_display_ram_end
001f0006 // 0022     jmple ClearScreenNext
00000040 // 0023     ret
031c006b // 0024     cmp lcd_char, lcd_character_count
00000042 // 0025     retge
001c105e // 0026     mov r16, lcd_char
0005115e // 0027     mov r17, lcd_font_height
008f0020 // 0028     call mul1616
0312135e // 0029     mov lcd_p_font_rom, r18+3
00131362 // 002a     add lcd_p_font_rom, lcd_p_font_rom, lcd_character_ram_address
0005125e // 002b     mov lcd_h, lcd_font_height
001e145e // 002c     mov lcd_p_ram_start, lcd_y
00031486 // 002d     shl lcd_p_ram_start, LCD_LINE_WIDTH_BITS
01141462 // 002e     add lcd_p_ram_start, lcd_p_ram_start, lcd_display_ram_address
0214006b // 002f     cmp lcd_p_ram_start, lcd_display_ram_end
00000045 // 0030     retgt
12120060 // 0031     test lcd_h, lcd_h
00000043 // 0032     retz
06141962 // 0033     add lcd_end, lcd_p_ram_start, lcd_line_width
001d155e // 0034     mov lcd_p_ram, lcd_x
00041587 // 0035     shr lcd_p_ram, 4
14151562 // 0036     add lcd_p_ram, lcd_p_ram, lcd_p_ram_start
1915006b // 0037     cmp lcd_p_ram, lcd_end
00000042 // 0038     retge
001316f0 // 0039     in lcd_font_data, [lcd_p_font_rom]
1f1f0060 // 003a     test inverted_colors, inverted_colors
003e0003 // 003b     jmpz CharacterOutNotInvertedColors
ffff168a // 003c     not lcd_font_data
07161668 // 003d     and lcd_font_data, lcd_font_data, lcd_font_mask
001517f0 // 003e     in lcd_display_data, [lcd_p_ram]
001d185e // 003f     mov lcd_offset, lcd_x
000f1888 // 0040     and lcd_offset, $000F
00101a5d // 0041     mov lcd_bits, 16
181a1a64 // 0042     sub lcd_bits, lcd_bits, lcd_offset
18161166 // 0043     shl lcd_temp, lcd_font_data, lcd_offset
18071066 // 0044     shl lcd_mask, lcd_font_mask, lcd_offset
10111168 // 0045     and lcd_temp, lcd_temp, lcd_mask
ffff108a // 0046     not lcd_mask
10171768 // 0047     and lcd_display_data, lcd_display_data, lcd_mask
11171769 // 0048     or lcd_display_data, lcd_display_data, lcd_temp
001517f4 // 0049     out [lcd_p_ram], lcd_display_data
041a006b // 004a     cmp lcd_bits, lcd_font_width
00560002 // 004b     jmpge CharacterOutSkipWord2
00011582 // 004c     inc lcd_p_ram
1915006b // 004d     cmp lcd_p_ram, lcd_end
00560002 // 004e     jmpge CharacterOutSkipWord2
001517f0 // 004f     in lcd_display_data, [lcd_p_ram]
1a161167 // 0050     shr lcd_temp, lcd_font_data, lcd_bits
1a071067 // 0051     shr lcd_mask, lcd_font_mask, lcd_bits
ffff108a // 0052     not lcd_mask
10171768 // 0053     and lcd_display_data, lcd_display_data, lcd_mask
11171769 // 0054     or lcd_display_data, lcd_display_data, lcd_temp
001517f4 // 0055     out [lcd_p_ram], lcd_display_data
00081482 // 0056     add lcd_p_ram_start, LCD_LINE_WIDTH
00011382 // 0057     inc lcd_p_font_rom
ffff1282 // 0058     dec lcd_h
002f0000 // 0059     jmp CharacterOutNextRow
003f175d // 005a     mov lcd_display_data, $3F
0000115d // 005b     mov lcd_temp, KS0108_ADDRESS
011117f4 // 005c     out [lcd_temp+KS0108_E], lcd_display_data
001117f4 // 005d     out [lcd_temp], lcd_display_data
00000040 // 005e     ret
003e175d // 005f     mov lcd_display_data, $3E
005b0000 // 0060     jmp DisplayOn2
00b8175d // 0061     mov lcd_display_data, $B8
1d171769 // 0062     or lcd_display_data, lcd_display_data, lcd_x
011117f4 // 0063     out [lcd_temp+KS0108_E], lcd_display_data
001117f4 // 0064     out [lcd_temp], lcd_display_data
00000040 // 0065     ret
0000115d // 0066     mov lcd_temp, KS0108_ADDRESS
0040175d // 0067     mov lcd_display_data, $40 ; set y = 0
011117f4 // 0068     out [lcd_temp+KS0108_E], lcd_display_data
001117f4 // 0069     out [lcd_temp], lcd_display_data
00001d5d // 006a     clr lcd_x
00610020 // 006b     call LcdSetX
00001e5d // 006c     clr lcd_y
0001145e // 006d     mov lcd_p_ram_start, lcd_display_ram_address
0014155e // 006e     mov lcd_p_ram, lcd_p_ram_start
001517f0 // 006f     in lcd_display_data, [lcd_p_ram]
00870020 // 0070     call LcdUpdateChip
00011e82 // 0071     inc lcd_y
00081582 // 0072     add lcd_p_ram, 8
00401e8b // 0073     cmp lcd_y, 64
006f0001 // 0074     jmplt LcdUpdateNext
00001e5d // 0075     clr lcd_y
00011d82 // 0076     inc lcd_x
0014155e // 0077     mov lcd_p_ram, lcd_p_ram_start
00610020 // 0078     call LcdSetX
001517f0 // 0079     in lcd_display_data, [lcd_p_ram]
00081787 // 007a     shr lcd_display_data, 8
00870020 // 007b     call LcdUpdateChip
00011e82 // 007c     inc lcd_y
00081582 // 007d     add lcd_p_ram, 8
00401e8b // 007e     cmp lcd_y, 64
00790001 // 007f     jmplt LcdUpdateNext2
00001e5d // 0080     clr lcd_y
00011d82 // 0081     inc lcd_x
00011482 // 0082     inc lcd_p_ram_start
00610020 // 0083     call LcdSetX
00101d8b // 0084     cmp lcd_x, 16
006e0001 // 0085     jmplt LcdUpdateNextWord
00000040 // 0086     ret
00081d80 // 0087     test lcd_x, 8
008c0004 // 0088     jmpne LcdUpdateChip2
071117f4 // 0089     out [lcd_temp+KS0108_CS2+KS0108_DC+KS0108_E], lcd_display_data
061117f4 // 008a     out [lcd_temp+KS0108_CS2+KS0108_DC], lcd_display_data
00000040 // 008b     ret
0b1117f4 // 008c     out [lcd_temp+KS0108_CS1+KS0108_DC+KS0108_E], lcd_display_data
0a1117f4 // 008d     out [lcd_temp+KS0108_CS1+KS0108_DC], lcd_display_data
00000040 // 008e     ret
10100060 // 008f     test r16, r16
00000043 // 0090     retz
0000125d // 0091     clr r18
0000135d // 0092     clr r19
0000145d // 0093     clr r20
00011180 // 0094     test r17, 1
00980003 // 0095     jmpz mul1616_next
10121262 // 0096     add r18, r18, r16
14131363 // 0097     adc r19, r19, r20
0010106f // 0098     shlc r16, r16
0014146d // 0099     rlc  r20, r20
00011187 // 009a     shr  r17, 1
00940004 // 009b     jmpnz mul1616_next2
00000040 // 009c     ret
